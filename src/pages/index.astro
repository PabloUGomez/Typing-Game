---
import Layout from './layouts/Layout.astro'
---

<Layout title='Typing Game'>
  <main class='text-white'>
    <h1 class='text-center text-3xl font-semibold'>Typing Game</h1>
    <section id='game'>
      <time class='text-yellow'></time>
      <p class='font-medium flex flex-wrap gap-x-2 m-0'></p>
      <input autofocus class='-z-50 opacity-0 pointer-events-none' />
    </section>
  </main>
</Layout>

<script>
  import { words as INITIAL_WORDS } from './store/data.js'

  const time = document.querySelector('time')
  const paragraph = document.querySelector('p')
  const input = document.querySelector('input')

  const INITIAL_TIME = 30

  let words = []
  let currentTime = INITIAL_TIME

  startGame()
  initEvents()

  function startGame() {
    words = [...INITIAL_WORDS]
    currentTime = INITIAL_TIME
    words = INITIAL_WORDS.toSorted(() => Math.random() - 0.5).slice(0, 50)
    currentTime = INITIAL_TIME

    time.textContent = currentTime.toString()

    paragraph.innerHTML = words
      .map((word) => {
        const letters = word.split('')

        return `<word>
        ${letters.map((letter) => `<letter>${letter}</letter>`).join('')}
      </word>`
      })
      .join('')

    const firstWord = document.querySelector('word')
    firstWord.classList.add('active')
    firstWord.querySelector('letter').classList.add('active')

    const intervalId = setInterval(() => {
      currentTime--
      time.textContent = currentTime.toString()

      if (currentTime <= 0) {
        clearInterval(intervalId)
        gameOver()
      }
    }, 1000)
  }

  function initEvents() {
    document.addEventListener('keydown', (event) => {
      input.focus()
    })
    input.addEventListener('keydown', onKeyDown)
    input.addEventListener('keyup', onKeyUp)
  }

  function onKeyUp(event) {
    const currentWord = document.querySelector('word.active')
    const currentLetter = currentWord.querySelector('letter.active')

    const wordLength = currentWord.textContent.trim()
    input.maxLength = wordLength.length

    const allLetters = currentWord.querySelectorAll('letter')

    allLetters.forEach((letter) =>
      letter.classList.remove('correct', 'incorrect')
    )

    input.value.split('').forEach((char, index) => {
      const letter = allLetters[index]
      const letterToCheck = wordLength[index]

      const isCorrect = char === letterToCheck
      const letterClass = isCorrect ? 'correct' : 'incorrect'
      letter.classList.add(letterClass)
    })

    currentLetter.classList.remove('active', 'is-last')
    const inputLength = input.value.length
    const nextActiveLetter = allLetters[inputLength]

    if (nextActiveLetter) {
      nextActiveLetter.classList.add('active')
    } else {
      currentLetter.classList.add('active', 'is-last')
    }
  }

  function onKeyDown(event) {
    const currentWord = document.querySelector('word.active')
    const currentLetter = currentWord.querySelector('letter.active')
    const { key } = event

    if (key === ' ') {
      event.preventDefault()

      const nextWord = currentWord.nextElementSibling
      const nextLetter = nextWord.querySelector('letter')

      currentWord.classList.remove('active', 'marked')
      currentLetter.classList.remove('active')

      nextWord.classList.add('active')
      nextLetter.classList.add('active')

      input.value = ''

      const hasMissedLetters =
        currentWord.querySelectorAll('letter:not(.correct)').length > 0

      const classToAdd = hasMissedLetters ? 'marked' : 'correct'
      currentWord.classList.add(classToAdd)
    }
  }

  function gameOver() {
    currentTime = INITIAL_TIME
    console.log('Game Over!')
    startGame()
  }
</script>

<style is:global>
  :root {
    color-scheme: light dark;
    --green: #00b755;
    --yellow: #daaf38;
    --red: #ca4754;
    --black: #222;
    --gray: #999;
  }
  word {
    border-bottom: 1.5px solid transparent;
    transition: border-color 0.3s ease-in-out;
    &.marked {
      border-bottom: solid 2px var(--red);
    }
  }
  letter {
    color: var(--gray);
    position: relative;
    &.active::before {
      content: '|';
      color: var(--yellow);
      position: absolute;
      left: -62%;
      animation: 1s blink infinite ease-in-out;
    }
    &.is-last::before {
      left: 65%;
    }
    &.correct {
      color: var(--green);
    }
    &.incorrect {
      color: var(--red);
    }
  }

  @keyframes blink {
    0%,
    25% {
      opacity: 1;
    }
    75% {
      opacity: 0;
    }
  }
</style>
